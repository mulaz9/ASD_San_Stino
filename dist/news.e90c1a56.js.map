{"mappings":"AAAA,YAAY,CAAC;AAEb,iBAAiB;AACjB,MAAM,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,AAAC;AAE7C,MAAM,OAAO,GAAG,iBAAkB;IAChC,MAAM,QAAQ,GAAG,MAAM,KAAK,CAC1B,8FAA8F,CAC/F,AAAC;IACF,MAAM,QAAQ,GAAG,MAAM,QAAQ,CAAC,IAAI,EAAE,AAAC;IACvC,MAAM,IAAI,GAAG,QAAQ,CAAC,IAAI,AAAC;IAC3B,oCAAoC;IACpC,MAAM,cAAc,GAAG,SAAU,CAAC,EAAE,EAAE,EAAE;QACtC,OAAO,QAAQ,CAAC,CAAC,0BAA0B,EAAE,EAAE,CAAC,gFACH,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,gEAEnE,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,8EAExB,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,qCAGtD,CAAC,CAAC;KACH,AAAC;IACF,KAAK,MAAM,IAAI,IAAI,IAAI,CAAC,OAAO,EAAE,CAAE;QACjC,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,AAAC;QACpB,IAAI,MAAM,GAAG,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,AAAC;QACzC,IAAI,CAAC,kBAAkB,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC;KAC9C;CACF,AAAC;AAEF,OAAO,EAAE,CAAC;AAEV,mBAAmB;AACnB,MAAM,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,SAAS,CAAC,AAAC;AAEjD,MAAM,SAAS,GAAG,iBAAkB;IAClC,oBAAoB;IACpB,MAAM,QAAQ,GAAG,MAAM,KAAK,CAC1B,gGAAgG,CACjG,AAAC;IACF,MAAM,QAAQ,GAAG,MAAM,QAAQ,CAAC,IAAI,EAAE,AAAC;IACvC,MAAM,IAAI,GAAG,QAAQ,CAAC,IAAI,AAAC;IAC3B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IAClB,cAAc;IACd,MAAM,cAAc,GAAG,SAAU,CAAC,EAAE;QAClC,OAAO,QAAQ,CAAC,CAAC,8GAGiC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,sEAGjG,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,2EAED,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,qBAErD,CAAC,CAAC;KACH,AAAC;IACF,KAAK,MAAM,IAAI,IAAI,IAAI,CAAC,OAAO,EAAE,CAAE;QACjC,IAAI,MAAM,GAAG,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,AAAC;QACrC,MAAM,CAAC,kBAAkB,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC;KAChD;CACF,AAAC;AAEF,SAAS,EAAE,CAAC","sources":["news_page.js"],"sourcesContent":["\"use strict\";\r\n\r\n// Rendering News\r\nconst news = document.querySelector(\".news\");\r\n\r\nconst getNews = async function () {\r\n  const response = await fetch(\r\n    \"https://acd-san-stino.herokuapp.com/api/news-sections?sort[0]=publishedAt:desc&populate=foto\"\r\n  );\r\n  const newsJson = await response.json();\r\n  const data = newsJson.data;\r\n  // console.log([...data.entries()]);\r\n  const generateMarkup = function (i, id) {\r\n    return /*html*/ `<a href=\"./single.html?id=${id}\"><div class=\"news--content\">\r\n    <img src=\"https://acd-san-stino.herokuapp.com${data[i].attributes.foto.data.attributes.url}\" />\r\n    <div class=\"news--text\">\r\n      <p class=\"news--date\">${data[i].attributes.data}<span class=\"blue--line\">--</span>\r\n      </p>\r\n      <h3 class=\"news--title\">${data[i].attributes.titolo}</h3>\r\n    </div>\r\n  </div></a>\r\n    `;\r\n  };\r\n  for (const item of data.entries()) {\r\n    let id = item[1].id;\r\n    let markup = generateMarkup(item[0], id);\r\n    news.insertAdjacentHTML(\"beforeend\", markup);\r\n  }\r\n};\r\n\r\ngetNews();\r\n\r\n// Rendering Videos\r\nconst videos = document.querySelector(\".videos\");\r\n\r\nconst getVideos = async function () {\r\n  // Ottenere dati API\r\n  const response = await fetch(\r\n    \"https://acd-san-stino.herokuapp.com/api/video-sections?sort[0]=publishedAt:desc&populate=video\"\r\n  );\r\n  const newsJson = await response.json();\r\n  const data = newsJson.data;\r\n  console.log(data);\r\n  // Creare html\r\n  const generateMarkup = function (i) {\r\n    return /*html*/ `\r\n  <div class=\"video--content\">\r\n    <video controls>\r\n      <source src=\"https://acd-san-stino.herokuapp.com${data[i].attributes.video.data.attributes.url}\" type=\"video/mp4\" />\r\n    </video>\r\n    <p class=\"video--date\">\r\n    ${data[i].attributes.data}<span class=\"blue--line\">--</span>\r\n    </p>\r\n    <h3 class=\"video--title\">${data[i].attributes.titolo}</h3>\r\n  </div>\r\n    `;\r\n  };\r\n  for (const item of data.entries()) {\r\n    let markup = generateMarkup(item[0]);\r\n    videos.insertAdjacentHTML(\"beforeend\", markup);\r\n  }\r\n};\r\n\r\ngetVideos();\r\n"],"names":[],"version":3,"file":"news.e90c1a56.js.map","sourceRoot":"/__parcel_source_root/"}